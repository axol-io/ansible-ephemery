---
# Ephemery Validator Management Playbook
# This playbook deploys the validator management scripts and sets up monitoring

- name: Deploy Ephemery Validator Management
  hosts: all
  become: true
  vars:
    ephemery_base_dir: "{{ ephemery_dir | default('/opt/ephemery') }}"
    ephemery_config_dir: "{{ ephemery_base_dir }}/config"
    ephemery_scripts_dir: "{{ ephemery_base_dir }}/scripts"
    ephemery_data_dir: "{{ ephemery_base_dir }}/data"
    ephemery_logs_dir: "{{ ephemery_base_dir }}/logs"
    ephemery_monitoring_dir: "{{ ephemery_data_dir }}/monitoring"
    ephemery_validator_dir: "{{ ephemery_data_dir }}/validator"
    ephemery_validator_scripts_dir: "{{ ephemery_scripts_dir }}/validator"

  tasks:
    - name: Create required directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ ephemery_validator_scripts_dir }}"
        - "{{ ephemery_monitoring_dir }}/validator"
        - "{{ ephemery_logs_dir }}/validator"
        - "{{ ephemery_config_dir }}"

    # Create standardized paths configuration if it doesn't exist
    - name: Check if standardized paths configuration exists
      ansible.builtin.stat:
        path: "{{ ephemery_config_dir }}/ephemery_paths.conf"
      register: paths_conf

    - name: Create standardized paths configuration if it doesn't exist
      ansible.builtin.copy:
        content: |
          # Ephemery Paths Configuration
          # This file defines standard paths used across all Ephemery scripts and services

          # Base directory for Ephemery installation
          EPHEMERY_BASE_DIR="{{ ephemery_base_dir }}"

          # Directory for Ephemery scripts
          EPHEMERY_SCRIPTS_DIR="${EPHEMERY_BASE_DIR}/scripts"

          # Directory for Ephemery data
          EPHEMERY_DATA_DIR="${EPHEMERY_BASE_DIR}/data"

          # Directory for Ephemery logs
          EPHEMERY_LOGS_DIR="${EPHEMERY_BASE_DIR}/logs"

          # Directory for Ephemery configuration
          EPHEMERY_CONFIG_DIR="${EPHEMERY_BASE_DIR}/config"

          # Validator scripts directory
          EPHEMERY_VALIDATOR_SCRIPTS_DIR="${EPHEMERY_SCRIPTS_DIR}/validator"

          # Validator data directory
          EPHEMERY_VALIDATOR_DIR="${EPHEMERY_DATA_DIR}/validator"

          # Monitoring directory
          EPHEMERY_MONITORING_DIR="${EPHEMERY_DATA_DIR}/monitoring"
        dest: "{{ ephemery_config_dir }}/ephemery_paths.conf"
        mode: '0644'
      when: not paths_conf.stat.exists

    - name: Copy validator management scripts
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ ephemery_validator_scripts_dir }}/"
        mode: '0755'
      loop:
        - "../scripts/validator/manage_validator_keys.sh"
        - "../scripts/validator/monitor_validator.sh"
        - "../scripts/validator/test_validator_config.sh"
        - "../scripts/validator/README.md"

    - name: Create validator monitoring configuration
      ansible.builtin.copy:
        content: |
          # Validator Monitoring Configuration
          BEACON_API="{{ beacon_api_endpoint | default('http://localhost:5052') }}"
          VALIDATOR_API="{{ validator_api_endpoint | default('http://localhost:5062') }}"
          VALIDATOR_METRICS_API="{{ validator_metrics_endpoint | default('http://localhost:5064/metrics') }}"
          ALERT_THRESHOLD="{{ validator_alert_threshold | default('90') }}"
          MONITORING_INTERVAL="{{ validator_monitoring_interval | default('60') }}"
        dest: "{{ ephemery_config_dir }}/validator_monitoring.conf"
        mode: '0644'

    - name: Set up validator monitoring cron job
      ansible.builtin.cron:
        name: "Ephemery validator monitoring"
        minute: "*/5"
        job: "{{ ephemery_validator_scripts_dir }}/monitor_validator.sh status --continuous --interval 300 > {{ ephemery_logs_dir }}/validator/monitoring.log 2>&1"
        user: "{{ ansible_user | default('root') }}"
      when: validator_monitoring_enabled | default(true) | bool

    - name: Set up validator health check cron job
      ansible.builtin.cron:
        name: "Ephemery validator health check"
        hour: "*/6"
        minute: "15"
        job: "{{ ephemery_validator_scripts_dir }}/monitor_validator.sh health > {{ ephemery_logs_dir }}/validator/health_check.log 2>&1"
        user: "{{ ansible_user | default('root') }}"
      when: validator_health_check_enabled | default(true) | bool

    - name: Create validator management wrapper script
      ansible.builtin.copy:
        content: |
          #!/bin/bash
          #
          # Validator Management Wrapper Script
          # This script provides a simple interface to the validator management scripts
          #

          SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
          VALIDATOR_SCRIPTS_DIR="${SCRIPT_DIR}/validator"

          # Source the standardized paths configuration if available
          if [[ -f "{{ ephemery_config_dir }}/ephemery_paths.conf" ]]; then
            source "{{ ephemery_config_dir }}/ephemery_paths.conf"
            VALIDATOR_SCRIPTS_DIR="${EPHEMERY_VALIDATOR_SCRIPTS_DIR:-${VALIDATOR_SCRIPTS_DIR}}"
          fi

          function show_help {
            echo "Ephemery Validator Management"
            echo ""
            echo "Usage: $0 [command] [options]"
            echo ""
            echo "Commands:"
            echo "  keys      Manage validator keys (generate, import, list, backup, restore)"
            echo "  monitor   Monitor validator status and performance"
            echo "  test      Test validator configuration"
            echo "  help      Show this help message"
            echo ""
            echo "For command-specific help, run: $0 [command] --help"
          }

          if [[ $# -lt 1 ]]; then
            show_help
            exit 1
          fi

          COMMAND="$1"
          shift

          case "${COMMAND}" in
            keys)
              "${VALIDATOR_SCRIPTS_DIR}/manage_validator_keys.sh" "$@"
              ;;
            monitor)
              "${VALIDATOR_SCRIPTS_DIR}/monitor_validator.sh" "$@"
              ;;
            test)
              "${VALIDATOR_SCRIPTS_DIR}/test_validator_config.sh" "$@"
              ;;
            help)
              show_help
              ;;
            *)
              echo "Error: Unknown command '${COMMAND}'"
              show_help
              exit 1
              ;;
          esac
        dest: "{{ ephemery_scripts_dir }}/manage-validator.sh"
        mode: '0755'

    # Integration with existing validator setup
    - name: Create symbolic link to wrapper script in /usr/local/bin
      ansible.builtin.file:
        src: "{{ ephemery_scripts_dir }}/manage-validator.sh"
        dest: /usr/local/bin/ephemery-validator
        state: link
        force: yes

    - name: Display usage information
      ansible.builtin.debug:
        msg:
          - "Validator management scripts have been deployed."
          - "You can now use the wrapper script to manage validators:"
          - "  ephemery-validator keys --help"
          - "  ephemery-validator monitor --help"
          - "  ephemery-validator test --help"

    # Add validator dashboard setup
    - name: Set up validator dashboard
      ansible.builtin.copy:
        content: |
          #!/bin/bash
          #
          # Validator Dashboard Setup Script
          #

          SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
          VALIDATOR_SCRIPTS_DIR="{{ ephemery_validator_scripts_dir }}"

          # Start the validator dashboard
          "${VALIDATOR_SCRIPTS_DIR}/monitor_validator.sh" dashboard --continuous --interval 30
        dest: "{{ ephemery_scripts_dir }}/start-validator-dashboard.sh"
        mode: '0755'
      when: validator_dashboard_enabled | default(true) | bool 