---
- name: Check if backups are enabled
  ansible.builtin.set_fact:
    backup_skip: "{{ not backup_enabled|default(false) }}"

- name: 🌟 Ensure backup directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop:
    - "{{ ephemery_backup_dir }}"
  when: not backup_skip

- name: 📝 Create backup script
  ansible.builtin.template:
    src: templates/scripts/backup.sh.j2
    dest: "{{ ephemery_scripts_dir }}/backup.sh"
    force: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  when: not backup_skip

- name: ⏱️ Setup cron job for hourly backup
  ansible.builtin.cron:
    name: "Ephemery hourly backup"
    minute: "0"
    job: "{{ ephemery_scripts_dir }}/backup.sh"
    user: "{{ ansible_user }}"
  when: not backup_skip and backup_frequency == "hourly"

- name: ⏱️ Setup cron job for daily backup
  ansible.builtin.cron:
    name: "Ephemery daily backup"
    minute: "0"
    hour: "2"
    job: "{{ ephemery_scripts_dir }}/backup.sh"
    user: "{{ ansible_user }}"
  when: not backup_skip and backup_frequency == "daily"

- name: ⏱️ Setup cron job for weekly backup
  ansible.builtin.cron:
    name: "Ephemery weekly backup"
    minute: "0"
    hour: "3"
    weekday: "0"
    job: "{{ ephemery_scripts_dir }}/backup.sh"
    user: "{{ ansible_user }}"
  when: not backup_skip and backup_frequency == "weekly"

- name: 🧹 Setup cron job for backup cleanup
  ansible.builtin.cron:
    name: "Ephemery backup cleanup"
    minute: "30"
    hour: "4"
    job: "find {{ ephemery_backup_dir }} -type f -name '*.tar.gz' -mtime +{{ backup_retention_days }} -delete"
    user: "{{ ansible_user }}"
  when: not backup_skip
