---
- name: Check if firewall is enabled
  ansible.builtin.set_fact:
    firewall_skip: "{{ not firewall_enabled|default(false) }}"

- name: Install firewalld (for RedHat-based systems)
  ansible.builtin.package:
    name: firewalld
    state: present
  when: not firewall_skip and ansible_os_family == "RedHat"

- name: Install UFW (for Debian-based systems)
  ansible.builtin.package:
    name: ufw
    state: present
  when: not firewall_skip and ansible_os_family == "Debian"

# RedHat-based systems firewall configuration
- name: Enable and start firewalld
  ansible.builtin.service:
    name: firewalld
    enabled: true
    state: started
  when: not firewall_skip and ansible_os_family == "RedHat"

- name: Set default policy for firewalld
  ansible.builtin.command: firewall-cmd --permanent --set-default-zone=drop
  when: not firewall_skip and ansible_os_family == "RedHat" and firewall_default_policy == "deny"

- name: Configure firewalld - allow specific ports
  ansible.builtin.firewalld:
    port: "{{ item }}/tcp"
    permanent: true
    state: enabled
  loop: "{{ firewall_allowed_tcp_ports }}"
  when: not firewall_skip and ansible_os_family == "RedHat"

- name: Configure firewalld - allow UDP ports
  ansible.builtin.firewalld:
    port: "{{ item }}/udp"
    permanent: true
    state: enabled
  loop: "{{ firewall_allowed_udp_ports }}"
  when: not firewall_skip and ansible_os_family == "RedHat"

- name: Reload firewalld
  ansible.builtin.command: firewall-cmd --reload
  when: not firewall_skip and ansible_os_family == "RedHat"

# Debian-based systems firewall configuration
- name: Enable UFW
  community.general.ufw:
    state: enabled
  when: not firewall_skip and ansible_os_family == "Debian"

- name: Set default UFW policy
  community.general.ufw:
    default: "{{ firewall_default_policy }}"
  when: not firewall_skip and ansible_os_family == "Debian"

- name: Configure UFW - allow specific TCP ports
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  loop: "{{ firewall_allowed_tcp_ports }}"
  when: not firewall_skip and ansible_os_family == "Debian"

- name: Configure UFW - allow specific UDP ports
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
    proto: udp
  loop: "{{ firewall_allowed_udp_ports }}"
  when: not firewall_skip and ansible_os_family == "Debian"

- name: Enable UFW logging
  community.general.ufw:
    logging: 'on'
  when: not firewall_skip and ansible_os_family == "Debian"

- name: Add client-specific firewall rules - Erigon
  ansible.builtin.include_tasks:
    file: "clients/erigon-prysm/firewall.yaml"
  when:
    - firewall_enabled|bool
    - el == 'erigon'

- name: Add client-specific firewall rules - Nethermind
  ansible.builtin.include_tasks:
    file: "clients/nethermind-teku/firewall.yaml"
  when:
    - firewall_enabled|bool
    - el == 'nethermind'

- name: Add client-specific firewall rules - Geth
  ansible.builtin.include_tasks:
    file: "clients/geth-lighthouse/firewall.yaml"
  when:
    - firewall_enabled|bool
    - el == 'geth'
