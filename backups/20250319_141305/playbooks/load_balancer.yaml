---
# Load Balancer Configuration for Multi-Node Ephemery
# This playbook configures a load balancer for Ephemery nodes

- name: Configure Load Balancer for Ephemery Nodes
  hosts: load_balancer
  become: true
  vars:
    lb_config_dir: "/etc/{{ lb_type }}"
    lb_service_name: "{{ lb_type }}"

  tasks:
    - name: Update package cache
      ansible.builtin.apt:
        update_cache: yes
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

    - name: Install NGINX load balancer
      ansible.builtin.apt:
        name: nginx
        state: present
      when: lb_type == 'nginx'

    - name: Install HAProxy load balancer
      ansible.builtin.apt:
        name: haproxy
        state: present
      when: lb_type == 'haproxy'

    - name: Create NGINX configuration directory
      ansible.builtin.file:
        path: "{{ lb_config_dir }}/conf.d"
        state: directory
        mode: '0755'
      when: lb_type == 'nginx'

    - name: Create NGINX configuration for Ephemery nodes
      ansible.builtin.template:
        src: templates/nginx_lb.conf.j2
        dest: "{{ lb_config_dir }}/conf.d/ephemery_lb.conf"
        mode: '0644'
      when: lb_type == 'nginx'
      notify: Restart NGINX

    - name: Create HAProxy configuration for Ephemery nodes
      ansible.builtin.template:
        src: templates/haproxy_lb.cfg.j2
        dest: "{{ lb_config_dir }}/haproxy.cfg"
        mode: '0644'
      when: lb_type == 'haproxy'
      notify: Restart HAProxy

    - name: Ensure load balancer service is running
      ansible.builtin.service:
        name: "{{ lb_service_name }}"
        state: started
        enabled: yes

    - name: Configure firewall for load balancer ports
      ansible.builtin.ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - "{{ lb_http_port | default(8545) }}"  # HTTP RPC
        - "{{ lb_ws_port | default(8546) }}"    # WebSocket
        - "{{ lb_consensus_port | default(5052) }}"  # Consensus API
        - 80  # HTTP
        - 443  # HTTPS
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

    - name: Create health check script
      ansible.builtin.template:
        src: templates/health_check.sh.j2
        dest: /usr/local/bin/ephemery_health_check.sh
        mode: '0755'

    - name: Set up health check cron job
      ansible.builtin.cron:
        name: "Ephemery health check"
        job: "/usr/local/bin/ephemery_health_check.sh > /var/log/ephemery_health_check.log 2>&1"
        minute: "*/5"
        state: present

  handlers:
    - name: Restart NGINX
      ansible.builtin.service:
        name: nginx
        state: restarted
      when: lb_type == 'nginx'

    - name: Restart HAProxy
      ansible.builtin.service:
        name: haproxy
        state: restarted
      when: lb_type == 'haproxy'
