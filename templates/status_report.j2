---
# Ephemery Node Status Report
# Generated: {{ ansible_date_time.date }} {{ ansible_date_time.time }}
# Hostname: {{ inventory_hostname }}

node_info:
  hostname: {{ inventory_hostname }}
  ip_address: {{ ansible_default_ipv4.address }}
  os_family: {{ ansible_os_family }}
  os_distribution: {{ ansible_distribution }}
  os_version: {{ ansible_distribution_version }}
  ansible_user: {{ ansible_user }}
  uptime: {{ system_uptime.stdout | trim }}
  system_load: {{ system_load.stdout | trim }}

system_status:
{% if check_disk_space | bool %}
  disk_space: 
    raw: {{ disk_space.stdout | trim }}
    {% set disk_parts = disk_space.stdout.split() %}
    {% if disk_parts | length > 4 %}
    usage_percentage: {{ disk_parts[4] | replace('%', '') | int }}
    status: {% if disk_parts[4] | replace('%', '') | int > disk_warning_threshold %}WARNING{% else %}OK{% endif %}
    {% endif %}
{% endif %}

{% if check_memory | bool %}
  memory_usage:
    raw: {{ memory_usage.stdout | trim }}
    {% if ansible_os_family == "Darwin" %}
    {% set mem_line = memory_usage.stdout | trim %}
    {% if "used" in mem_line | lower %}
    {% set mem_used = mem_line | regex_findall('(\d+)M used') | first | int %}
    {% set mem_total = mem_line | regex_findall('(\d+)M total') | first | int %}
    {% set mem_percent = (mem_used / mem_total * 100) | round | int %}
    usage_percentage: {{ mem_percent }}
    status: {% if mem_percent > memory_warning_threshold %}WARNING{% else %}OK{% endif %}
    {% endif %}
    {% else %}
    {% set mem_parts = memory_usage.stdout.split() %}
    {% if mem_parts | length > 6 %}
    {% set mem_used = mem_parts[2] | int %}
    {% set mem_total = mem_parts[1] | int %}
    {% set mem_percent = (mem_used / mem_total * 100) | round | int %}
    usage_percentage: {{ mem_percent }}
    status: {% if mem_percent > memory_warning_threshold %}WARNING{% else %}OK{% endif %}
    {% endif %}
    {% endif %}
{% endif %}

{% if check_client_versions | bool %}
client_versions:
  {% if el_client_name is defined %}
  execution_client:
    name: {{ el_client_name }}
    version: {% if el_version is defined %}{{ el_version.stdout | trim }}{% else %}N/A{% endif %}
  {% endif %}
  
  {% if cl_client_name is defined %}
  consensus_client:
    name: {{ cl_client_name }}
    version: {% if cl_version is defined %}{{ cl_version.stdout | trim }}{% else %}N/A{% endif %}
  {% endif %}
{% endif %}

{% if check_services | bool %}
service_status:
  {% if el_service_status is defined %}
  execution_client: {{ el_service_status }}
  {% endif %}
  
  {% if cl_service_status is defined %}
  consensus_client: {{ cl_service_status }}
  {% endif %}
  
  {% if validator_service_status is defined %}
  validator: {{ validator_service_status }}
  {% endif %}
{% endif %}

{% if check_endpoints | bool and el_endpoint is defined %}
endpoint_status:
  execution_client_endpoint:
    status: {% if el_endpoint.status == 200 %}OK{% else %}ERROR{% endif %}
    response: {% if el_endpoint.status == 200 %}{{ el_endpoint.json | to_nice_json }}{% else %}N/A{% endif %}
{% endif %}

{% if check_sync_status | bool and el_sync is defined %}
sync_status:
  execution_client:
    syncing: {% if el_sync.status == 200 %}
      {% if el_sync.json.result == false %}false{% else %}true{% endif %}
      {% if el_sync.json.result != false %}
      current_block: {{ el_sync.json.result.currentBlock | default('unknown') }}
      highest_block: {{ el_sync.json.result.highestBlock | default('unknown') }}
      {% endif %}
    {% else %}unknown{% endif %}
{% endif %}

{% if check_peers | bool and el_peers is defined %}
peer_status:
  execution_client:
    peer_count: {% if el_peers.status == 200 %}
      {% if el_peers.json.result is defined %}{{ el_peers.json.result | replace('0x', '') | int(base=16) }}{% else %}unknown{% endif %}
    {% else %}unknown{% endif %}
{% endif %}

{% if check_logs | bool %}
log_errors:
  {% if el_log_errors is defined %}
  execution_client:
    error_count: {{ el_log_errors.stdout_lines | length }}
    recent_errors: {% if el_log_errors.stdout_lines | length > 0 %}
    {% for line in el_log_errors.stdout_lines %}
      - {{ line | trim }}
    {% endfor %}
    {% else %}[]{% endif %}
  {% endif %}
  
  {% if cl_log_errors is defined %}
  consensus_client:
    error_count: {{ cl_log_errors.stdout_lines | length }}
    recent_errors: {% if cl_log_errors.stdout_lines | length > 0 %}
    {% for line in cl_log_errors.stdout_lines %}
      - {{ line | trim }}
    {% endfor %}
    {% else %}[]{% endif %}
  {% endif %}
{% endif %} 