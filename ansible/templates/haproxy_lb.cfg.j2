# Ephemery Load Balancer Configuration - HAProxy
# Generated by Ansible

global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# Ephemery HTTP RPC Frontend
frontend ephemery_execution_frontend
    bind *:{{ lb_http_port | default(8545) }}
    mode http
    default_backend ephemery_execution_backend
    
    # Handle CORS preflight requests
    http-request add-header Access-Control-Allow-Origin "*" if METH_OPTIONS
    http-request add-header Access-Control-Allow-Methods "GET, POST, OPTIONS" if METH_OPTIONS
    http-request add-header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" if METH_OPTIONS
    http-request add-header Access-Control-Max-Age "1728000" if METH_OPTIONS
    http-request add-header Content-Type "text/plain; charset=utf-8" if METH_OPTIONS
    http-request add-header Content-Length "0" if METH_OPTIONS
    http-request return status 204 if METH_OPTIONS

# Ephemery WebSocket Frontend
frontend ephemery_execution_ws_frontend
    bind *:{{ lb_ws_port | default(8546) }}
    mode http
    option http-server-close
    default_backend ephemery_execution_ws_backend

# Ephemery Consensus API Frontend
frontend ephemery_consensus_frontend
    bind *:{{ lb_consensus_port | default(5052) }}
    mode http
    default_backend ephemery_consensus_backend
    
    # Handle CORS preflight requests
    http-request add-header Access-Control-Allow-Origin "*" if METH_OPTIONS
    http-request add-header Access-Control-Allow-Methods "GET, POST, OPTIONS" if METH_OPTIONS
    http-request add-header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" if METH_OPTIONS
    http-request add-header Access-Control-Max-Age "1728000" if METH_OPTIONS
    http-request add-header Content-Type "text/plain; charset=utf-8" if METH_OPTIONS
    http-request add-header Content-Length "0" if METH_OPTIONS
    http-request return status 204 if METH_OPTIONS

# Status page
frontend stats
    bind *:7000
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if TRUE
    stats auth admin:ephemery

# Ephemery HTTP RPC Backend
backend ephemery_execution_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    default-server inter 3s fall 3 rise 2
{% for node in backend_nodes %}
    server {{ node }} {{ hostvars[node].ansible_host }}:8545 check
{% endfor %}

# Ephemery WebSocket Backend
backend ephemery_execution_ws_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    timeout server 86400s
    default-server inter 3s fall 3 rise 2
{% for node in backend_nodes %}
    server {{ node }} {{ hostvars[node].ansible_host }}:8546 check
{% endfor %}

# Ephemery Consensus API Backend
backend ephemery_consensus_backend
    balance roundrobin
    option httpchk GET /eth/v1/node/health
    http-check expect status 200
    default-server inter 3s fall 3 rise 2
{% for node in backend_nodes %}
    server {{ node }} {{ hostvars[node].ansible_host }}:5052 check
{% endfor %} 