---
# User and group configuration tasks for common role

- name: Create the Ephemery group
  group:
    name: "{{ common_group }}"
    state: present
  become: true

- name: Create the Ephemery user
  user:
    name: "{{ common_user }}"
    group: "{{ common_group }}"
    shell: /bin/bash
    home: "{{ common_user_home }}"
    createhome: yes
    system: yes
    state: present
  become: true

- name: Set proper SSH directory permissions
  file:
    path: "{{ common_user_home }}/.ssh"
    state: directory
    owner: "{{ common_user }}"
    group: "{{ common_group }}"
    mode: '0700'
  become: true

- name: Check if user is in Docker group
  shell: groups {{ common_user }} | grep -q docker
  register: user_in_docker_group
  changed_when: false
  failed_when: false
  become: true
  when: docker_install | bool

- name: Add user to Docker group
  user:
    name: "{{ common_user }}"
    groups: docker
    append: yes
  become: true
  when:
    - docker_install | bool
    - user_in_docker_group.rc != 0

- name: Set proper sudoers file for Ephemery user
  template:
    src: sudoers.j2
    dest: /etc/sudoers.d/ephemery
    owner: root
    group: root
    mode: '0440'
    validate: 'visudo -cf %s'
  become: true

- name: Add common user profile entries
  blockinfile:
    path: "{{ common_user_home }}/.bashrc"
    owner: "{{ common_user }}"
    group: "{{ common_group }}"
    mode: '0644'
    create: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK - EPHEMERY CONFIGURATION"
    block: |
      # Ephemery Environment Variables
      export EPHEMERY_DATA_DIR="{{ data_dir }}"
      export EPHEMERY_CONFIG_DIR="{{ config_dir }}"
      export EPHEMERY_NETWORK="{{ ephemery_network }}"
      export EPHEMERY_JWT_PATH="{{ jwt_secret_path }}"
      export EPHEMERY_NETWORK_ID="{{ network_id }}"
      export EPHEMERY_CHAIN_ID="{{ chain_id }}"

      # Add scripts directory to PATH
      export PATH="{{ scripts_dir }}:$PATH"

      # Aliases for common operations
      alias ethstatus='systemctl status geth lighthouse'
      alias ethlog='journalctl -fu geth'
      alias ethrestart='systemctl restart geth lighthouse'
  become: true
