---
# Deploy dashboard services

- name: Install required Python packages
  ansible.builtin.pip:
    name:
      - flask
      - flask-cors
      - websockets
    state: present
  become: true

- name: Create dashboard directory structure
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - /opt/ephemery/dashboard
    - /opt/ephemery/dashboard/api
    - /opt/ephemery/dashboard/static
    - /opt/ephemery/dashboard/static/js
    - /opt/ephemery/dashboard/static/css
    - /var/log/ephemery

- name: Copy dashboard API server
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/dashboard/api/dashboard_api.py"
    dest: /opt/ephemery/dashboard/api/dashboard_api.py
    mode: "0755"

- name: Copy WebSocket server
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/dashboard/api/sync_websocket.py"
    dest: /opt/ephemery/dashboard/api/sync_websocket.py
    mode: "0755"

- name: Copy dashboard static files
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/dashboard/static/"
    dest: /opt/ephemery/dashboard/static/
    mode: "0644"

- name: Copy dashboard HTML template
  ansible.builtin.template:
    src: "{{ playbook_dir }}/ansible/templates/sync_dashboard.html.j2"
    dest: /opt/ephemery/dashboard/index.html
    mode: "0644"

- name: Install dashboard API service
  ansible.builtin.template:
    src: dashboard-api.service.j2
    dest: /etc/systemd/system/dashboard-api.service
    mode: "0644"
  become: true

- name: Install WebSocket service
  ansible.builtin.template:
    src: sync-websocket.service.j2
    dest: /etc/systemd/system/sync-websocket.service
    mode: "0644"
  become: true

- name: Create or update URL check script
  ansible.builtin.copy:
    dest: "{{ directories.scripts }}/check_sync_urls.sh"
    mode: "0755"
    content: |
      #!/bin/bash
      # check_sync_urls.sh - Test various checkpoint sync URLs for accessibility

      # List of URLs to test
      URLS=(
        "https://checkpoint-sync.holesky.ethpandaops.io"
        "https://beaconstate-holesky.chainsafe.io"
        "https://checkpoint-sync.ephemery.dev"
        "https://checkpoint.ephemery.eth.limo"
        "https://checkpoint-sync.ephemery.ethpandaops.io"
      )

      echo "Testing checkpoint sync URLs..."
      echo "================================"

      for url in "${URLS[@]}"; do
        echo -n "Testing $url: "
        response=$(curl -s -o /dev/null -w "%{http_code}" "$url/eth/v1/beacon/states/finalized" -m 10)

        if [ "$response" = "200" ]; then
          echo "OK (200)"
        else
          echo "FAILED ($response)"
        fi
      done

      echo "================================"
      echo "Test completed. Use the URL marked as OK in your configuration."

- name: Configure Nginx for dashboard
  ansible.builtin.template:
    src: nginx-dashboard.conf.j2
    dest: /etc/nginx/sites-available/dashboard.conf
    mode: "0644"
  become: true
  notify: restart nginx

- name: Enable Nginx site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/dashboard.conf
    dest: /etc/nginx/sites-enabled/dashboard.conf
    state: link
  become: true
  notify: restart nginx

- name: Enable and start dashboard API service
  ansible.builtin.systemd:
    name: dashboard-api
    state: started
    enabled: true
    daemon_reload: true
  become: true

- name: Enable and start WebSocket service
  ansible.builtin.systemd:
    name: sync-websocket
    state: started
    enabled: true
    daemon_reload: true
  become: true
