---
- name: Check if validator is enabled
  ansible.builtin.set_fact:
    validator_skip: '{{ not validator_enabled | default(true) | bool }}'
  tags:
    - validator

- name: Check if custom validator keys are to be used
  ansible.builtin.set_fact:
    use_custom_keys: >-
      {{ validator_keys_src is defined and validator_keys_src | length > 0 }}
  when: not validator_skip
  tags:
    - validator

- name: Display validator configuration
  ansible.builtin.debug:
    msg: |
      Validator Configuration:
      - Validator Enabled: {{ validator_enabled | default(true) | bool }}
      - Using Custom Keys: {{ use_custom_keys | default(false) | bool }}
      - Validator Client: >-
          {{ cl_client_name | default('not specified') }}
      - Validator Image: >-
          {{ client_images.validator | default('not specified') }}
  when: not validator_skip
  tags:
    - validator

- name: Include custom validator setup tasks
  ansible.builtin.include_tasks:
    file: custom-validator-setup.yaml
  when: not validator_skip and use_custom_keys | default(false) | bool
  tags:
    - validator

- name: Ensure validator directories exist
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
    owner: '{{ ansible_user | default("root") }}'
    group: '{{ ansible_user | default("root") }}'
  loop:
    - '{{ ephemery_data_dir }}/validator'
    - '{{ ephemery_data_dir }}/validator/keys'
    - '{{ ephemery_data_dir }}/validator/secrets'
    - '{{ ephemery_secrets_dir }}/validator'
    - '{{ ephemery_secrets_dir }}/validator/keys'
    - '{{ ephemery_secrets_dir }}/validator/passwords'
    - '{{ ephemery_base_dir }}/tmp'  # Temporary directory for processing
  when: not validator_skip and not use_custom_keys | default(false) | bool
  tags:
    - validator

- name: Check if validator keys already exist
  ansible.builtin.find:
    paths: '{{ ephemery_secrets_dir }}/validator/keys'
    patterns: 'keystore-*.json'
  register: existing_keys
  when: not validator_skip
  tags:
    - validator

- name: Generate validator keys
  ansible.builtin.shell: |
    if [ ! -f '{{ ephemery_secrets_dir }}/validator/keys_generated' ]; then
        # This is a placeholder command - in a real implementation,
        # you would use an appropriate tool to generate validator keys

        # For example: ./deposit --language=english --num_validators=1
        # generate-keys
        echo "Keys generated on $(date)" > \
          '{{ ephemery_secrets_dir }}/validator/keys_generated'
    fi
  args:
    creates: '{{ ephemery_secrets_dir }}/validator/keys_generated'
  when: >
    not validator_skip and
    validator_enabled | default(true) | bool and
    not use_custom_keys | default(false) | bool and
    (existing_keys.matched | default(0) == 0)
  tags:
    - validator

- name: Create password file for validator
  ansible.builtin.copy:
    content: "ephemery"
    dest: "{{ ephemery_secrets_dir }}/validator/passwords/password.txt"
    mode: '0600'
    owner: '{{ ansible_user | default("root") }}'
    group: '{{ ansible_user | default("root") }}'
  when: not validator_skip and not use_custom_keys | default(false) | bool
  tags:
    - validator

- name: Extract Ephemery network configuration
  ansible.builtin.shell: |
    mkdir -p {{ ephemery_base_dir }}/config/ephemery_network
    cd {{ ephemery_base_dir }}/config/ephemery_network
    if [ ! -f "genesis.ssz" ]; then
      wget -q https://ephemery.pk910.de/testnet-all.tar.gz -O testnet-all.tar.gz
      tar -xzf testnet-all.tar.gz
    fi
  args:
    creates: "{{ ephemery_base_dir }}/config/ephemery_network/genesis.ssz"
  when: not validator_skip
  tags:
    - validator

- name: Set client-specific beacon API endpoint
  ansible.builtin.set_fact:
    beacon_api_endpoint: >
      {% if cl_client_name == 'prysm' %}localhost:4000
      {% else %}http://127.0.0.1:{{ cl_client_port | default(5052) }} {% endif %}
  when: not validator_skip
  tags:
    - validator

- name: Stop existing validator container to prevent slashing
  community.docker.docker_container:
    name: '{{ network }}-validator-{{ cl }}'
    state: stopped
  register: stop_validator_result
  failed_when:
    - stop_validator_result.failed
    - "'No such container' not in stop_validator_result.msg"
  when: not validator_skip and not test_mode | default(false) | bool

- name: Remove existing validator container
  community.docker.docker_container:
    name: '{{ network }}-validator-{{ cl }}'
    state: absent
  when: not validator_skip and not test_mode | default(false) | bool

- name: Ensure validator keys directory is not empty (non-custom keys)
  ansible.builtin.shell: |
    if [ ! "$(ls -A {{ ephemery_secrets_dir }}/validator/keys/)" ]; then
      echo "Warning: No validator keys found in {{ ephemery_secrets_dir }}/validator/keys/"
      echo "Please ensure you have validator keys in the correct location"
      exit 1
    fi
  changed_when: false
  register: validator_keys_check
  ignore_errors: true
  when: not validator_skip and not use_custom_keys | default(false) | bool
  tags:
    - validator

- name: Report validator keys check result
  ansible.builtin.debug:
    msg: "{{ validator_keys_check.stdout_lines }}"
  when: validator_keys_check is defined and validator_keys_check.stdout_lines is defined
  tags:
    - validator

- name: Start Validator client
  community.docker.docker_container:
    name: '{{ network }}-validator-{{ cl }}'
    image: '{{ client_images.validator }}'
    state: started
    restart_policy: unless-stopped
    memory: '{{ validator_memory_limit | default("1g") }}'
    network_mode: host
    volumes:
      - '{{ ephemery_data_dir }}/validator:/data:rw'
      - '{{ ephemery_secrets_dir }}/validator/keys:/secrets/keys:ro'
      - '{{ ephemery_secrets_dir }}/validator/passwords:/secrets/passwords:ro'
      - '{{ jwt_secret_path }}:/execution-auth.jwt:ro'
      - '{{ ephemery_base_dir }}/config/ephemery_network:/ephemery_config:ro'
    command: >
      lighthouse validator_client
      --beacon-nodes {{ beacon_api_endpoint }}
      --datadir /data
      --testnet-dir /ephemery_config
      --validators-dir /secrets/keys
      --secrets-dir /secrets/passwords
  when: not validator_skip and not use_custom_keys | default(false) | bool and not test_mode | default(false) | bool
  tags:
    - validator
